{"version":3,"sources":["componnets/common/Loader/6.svg","componnets/Navbar/Navbar.jsx","componnets/AboutPage/AboutPage.jsx","componnets/common/Form.jsx","componnets/HomePage/Notes/Note.jsx","componnets/HomePage/Notes/Notes.jsx","componnets/common/Alert.jsx","componnets/common/Loader/Loader.jsx","componnets/HomePage/HomePage.jsx","redux/homePageReducer.js","componnets/HomePage/HomePageContainer.jsx","App.js","serviceWorker.js","redux/store.js","index.js"],"names":["module","exports","Navbar","className","to","AboutPage","class","Form","props","useState","value","setValue","onSubmit","e","preventDefault","trim","onAddNewNote","onWarning","onChange","currentTarget","type","placeholder","Note","index","note","title","date","onClick","onNoteRemove","id","Notes","NotsElement","notes","map","CSSTransition","key","classNames","timeout","TransitionGroup","component","Alert","in","alert","boolean","enter","exit","mountOnEnter","unmountOnExit","onHideAlert","message","Loader","src","loader","HomePage","isFetching","initialState","homePageReducer","state","action","payload","filter","noteId","setNotesData","addNewNote","noteRemove","isFetchingAC","HomePageContainer","this","requestNotes","React","Component","connect","homePage","dispatch","a","newNote","Date","now","toJSON","axios","response","data","name","then","statusText","Object","keys","App","path","render","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddlaware","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.76106b32.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/6.8ae8a199.svg\";","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './Navbar.css'\r\n\r\nconst Navbar = () => {\r\n    return(\r\n        <div>\r\n            <ul className='navBar'>\r\n                <h2>React To Do List</h2>\r\n                <li><NavLink to='/home'>Home</NavLink></li>\r\n                <li><NavLink to='/about'>About</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport './About.css';\r\n\r\nconst AboutPage = () => {\r\n    return(\r\n        <div class=\"about-section\">\r\n            <h1>This application is designed to take notes.</h1>\r\n            <span>date of creation </span> <strong>21.04.2020</strong>\r\n            <p>Version: 1.0.0.1</p>\r\n            <address>Armenia Yerevan</address>\r\n            <p>Email: matevossyan77@gmail.com</p>\r\n            <p>tel. +374 95572075</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutPage;","import React, { useState } from 'react';\r\nimport './common.css';\r\n\r\nconst Form = (props) => {\r\n    let [value, setValue] = useState('');\r\n    const addNote = (e) => {\r\n        e.preventDefault()\r\n        if(value.trim()){\r\n            props.onAddNewNote(value);\r\n            setValue(''); \r\n        }else{\r\n            props.onWarning()\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <form onSubmit={addNote}>\r\n                <input onChange={(e)=> setValue(e.currentTarget.value)} \r\n                value={value}className=\"noteInput\" type=\"text\" placeholder={'Title...'}/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport './Notes.css';\r\n\r\nconst Note = (props) => {\r\n    return(\r\n        <div className={'note'}>\r\n            <li>\r\n                <div>\r\n                    <strong>{props.index + 1})&nbsp;{props.note.title}</strong>\r\n                    <small>{props.note.date}</small>\r\n                </div>\r\n                <button onClick={()=> props.onNoteRemove(props.note.id)} className=\"button button3\">&times;</button>\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note;","import React from 'react';\r\nimport './Notes.css';\r\nimport Note from './Note';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n\r\nconst Notes = (props) => {\r\n\r\n    let NotsElement = props.notes.map((note, index) =>\r\n        <CSSTransition\r\n            key={note.id}\r\n            classNames={'note'}\r\n            timeout={500}>\r\n            <Note index={index} note={note} onNoteRemove={props.onNoteRemove}/>\r\n        </CSSTransition>)\r\n\r\n    return (\r\n        <div>\r\n            <TransitionGroup component='ul'>\r\n                {NotsElement}     \r\n            </TransitionGroup>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notes;","import React from 'react';\r\nimport {CSSTransition} from 'react-transition-group';\r\nimport './common.css';\r\n\r\n\r\nconst Alert = (props) => {\r\n    return (\r\n        <CSSTransition \r\n            in = {props.alert.boolean}\r\n            timeout = {{\r\n                enter: 500,\r\n                exit: 350\r\n            }}\r\n            classNames = {\"alert\"}\r\n            mountOnEnter\r\n            unmountOnExit\r\n        >\r\n            <div className={\"alert\"}>\r\n                <div className={props.alert.className}>\r\n                    <span className=\"closebtn\" onClick={()=>props.onHideAlert(false)}>&times;</span>\r\n                    <strong>{props.alert.title}:</strong> {props.alert.message}\r\n                </div>     \r\n            </div>\r\n        </CSSTransition>\r\n    )\r\n}\r\n\r\nexport default Alert;","import React from 'react';\r\nimport '../common.css';\r\nimport loader from './6.svg'\r\n\r\n\r\nconst Loader = (props) => {\r\n    return (\r\n        <div className='loader'>\r\n            <img src={loader}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\nimport Form from '../common/Form';\r\nimport Notes from './Notes/Notes';\r\nimport Alert from '../common/Alert';\r\nimport Loader from '../common/Loader/Loader';\r\n\r\nconst HomePage = (props) => {\r\n    return(\r\n        <div className='home-page'>\r\n            <Alert alert={props.alert} onHideAlert={props.onHideAlert}/>\r\n            <Form onAddNewNote={props.onAddNewNote} onWarning={props.onWarning}/>\r\n            {\r\n                props.isFetching ? <Loader/>\r\n                :<Notes notes={props.notes} onNoteRemove={props.onNoteRemove}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import * as axios from 'axios';\r\n\r\nconst SET_NOTES_DATA = 'SET_NOTES_DATA';\r\nconst ADD_NEW_NOTE = 'ADD_NEW_NOTE';\r\nconst ON_HIDE_ALERT = 'ON_HIDE_ALERT';\r\nconst ON_REMOVE = 'ON_REMOVE';\r\nconst ON_WARNING = 'ON_WARNING';\r\nconst IS_FETCHING = 'IS_FETCHING';\r\n\r\nlet initialState = {\r\n    notes: [],\r\n    alert: {\r\n        boolean: false,\r\n        message: null,\r\n        className: null,\r\n        title: null\r\n    },\r\n    isFetching: false\r\n}\r\n\r\nconst homePageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEW_NOTE:\r\n            return {\r\n                ...state,\r\n                notes: [...state.notes, action.payload],\r\n                alert: {\r\n                    ...state.alert,\r\n                    boolean: true,\r\n                    message: 'You added a new note',\r\n                    className: 'newNoteAlert',\r\n                    title: 'Attention'\r\n                }\r\n            }\r\n        case ON_REMOVE:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.filter(note => note.id !== action.noteId),\r\n                alert: {\r\n                    ...state.alert,\r\n                    boolean: true,\r\n                    message: 'You deleted a note',\r\n                    className: 'removeNoteAlert',\r\n                    title: 'Attention'\r\n                }\r\n            }\r\n        case ON_WARNING:\r\n            return {\r\n                ...state,\r\n                alert: {\r\n                    ...state.alert,\r\n                    boolean: true,\r\n                    message: 'Enter note',\r\n                    className: 'warning',\r\n                    title: 'Warning'\r\n                }\r\n            }\r\n        case ON_HIDE_ALERT:\r\n            return {\r\n                ...state,\r\n                alert: { ...state.alert, boolean: action.boolean }\r\n            }\r\n        case SET_NOTES_DATA:\r\n            return {\r\n                ...state,\r\n                notes: action.payload\r\n            }\r\n        case IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.boolean\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default homePageReducer;\r\n\r\nconst setNotesData = (payload) => ({ type: SET_NOTES_DATA, payload });\r\nconst addNewNote = (payload) => ({ type: ADD_NEW_NOTE, payload });\r\nconst noteRemove = (noteId) => ({ type: ON_REMOVE, noteId });\r\nexport const onWarning = () => ({ type: ON_WARNING });\r\nexport const onHideAlert = (boolean) => ({ type: ON_HIDE_ALERT, boolean });\r\nconst isFetchingAC = (boolean) => ({ type: IS_FETCHING, boolean });\r\n\r\n\r\nexport const requestNotes = () => async (dispatch) => {\r\n    dispatch(isFetchingAC(true))\r\n    let response = await axios.get('https://to-do-list-3acfa.firebaseio.com/notes.json');\r\n    if (response.data != null) {\r\n        const payload = Object.keys(response.data).map(key => {\r\n            return {\r\n                ...response.data[key],\r\n                id: key\r\n            }\r\n        })\r\n        dispatch(setNotesData(payload));\r\n    }\r\n    dispatch(isFetchingAC(false));\r\n}\r\n\r\nexport const onAddNewNote = (value) => async (dispatch) =>{\r\n    let newNote = {\r\n        id: Date.now(), \r\n        title: value,\r\n        date: new Date().toJSON(),\r\n    };\r\n    let response = await axios.post('https://to-do-list-3acfa.firebaseio.com/notes.json',newNote);\r\n        const payload = {\r\n            ...newNote,\r\n            id: response.data.name\r\n        };\r\n        dispatch(addNewNote(payload));\r\n}\r\n\r\nexport const onNoteRemove = (noteId) => async (dispatch) => {\r\n    axios.delete(`https://to-do-list-3acfa.firebaseio.com/notes/${noteId}.json`).then(response =>{\r\n            if(response.statusText === \"OK\"){\r\n                dispatch(noteRemove(noteId));\r\n            }\r\n        })\r\n}","import React from 'react';\r\nimport HomePage from './HomePage';\r\nimport {connect} from 'react-redux';\r\nimport {onHideAlert,onAddNewNote,onNoteRemove,onWarning,requestNotes} from '../../redux/homePageReducer';\r\n\r\nclass HomePageContainer extends React.Component {\r\n\r\n    componentDidMount(){this.props.requestNotes();};\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <HomePage notes={this.props.notes}\r\n                            alert={this.props.alert}\r\n                            onHideAlert={this.props.onHideAlert}\r\n                            onAddNewNote={this.props.onAddNewNote}\r\n                            onNoteRemove={this.props.onNoteRemove}\r\n                            onWarning={this.props.onWarning}\r\n                            isFetching={this.props.isFetching}\r\n\r\n                 />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapSTP = (state) => ({\r\n    notes: state.homePage.notes,\r\n    alert: state.homePage.alert,\r\n    isFetching: state.homePage.isFetching,\r\n})\r\n\r\nexport default connect(mapSTP,{onHideAlert,onAddNewNote,onNoteRemove, onWarning,requestNotes})(HomePageContainer);","import React from 'react';\nimport {HashRouter, Route} from 'react-router-dom';\nimport './index.css';\nimport Navbar from './componnets/Navbar/Navbar';\nimport AboutPage from './componnets/AboutPage/AboutPage';\nimport HomePageContainer from './componnets/HomePage/HomePageContainer';\n\nfunction App() {\n  return (\n    <HashRouter>\n    <div className=\"App\">\n      <Navbar/>\n      <div className='content'>\n        <Route path='/home' render={()=> <HomePageContainer/>}/>\n        <Route path='/about' render={()=> <AboutPage/>}/>\n      </div>\n    </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport homePageReducer from './homePageReducer';\r\nimport thunkMiddlaware from 'redux-thunk';\r\n\r\n\r\nlet reducers = combineReducers({\r\n    homePage: homePageReducer\r\n})\r\n\r\nexport const store = createStore(reducers,applyMiddleware(thunkMiddlaware))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}