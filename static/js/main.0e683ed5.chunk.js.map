{"version":3,"sources":["componnets/Navbar/Navbar.jsx","componnets/AboutPage/AboutPage.jsx","componnets/common/Form.jsx","componnets/HomePage/Notes/Note.jsx","componnets/HomePage/Notes/Notes.jsx","componnets/common/Alert.jsx","componnets/HomePage/HomePage.jsx","redux/homePageReducer.js","componnets/HomePage/HomePageContainer.jsx","App.js","serviceWorker.js","redux/store.js","index.js"],"names":["Navbar","className","to","AboutPage","class","Form","props","useState","value","setValue","onSubmit","e","preventDefault","trim","addNewNote","onWarning","onChange","currentTarget","type","placeholder","Note","note","complated","checked","onToggle","id","index","title","Date","toLocaleDateString","onClick","onNoteRemove","Notes","NotsElement","notes","map","CSSTransition","key","classNames","timeout","TransitionGroup","component","Alert","in","alert","boolean","enter","exit","mountOnEnter","unmountOnExit","onHideAlert","message","HomePage","initialState","homePageReducer","state","action","newNote","now","filter","noteId","HomePageContainer","userId","this","React","Component","connect","homePage","App","path","render","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.0e683ed5.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './Navbar.css'\r\n\r\nconst Navbar = () => {\r\n    return(\r\n        <div>\r\n            <ul className='navBar'>\r\n                <h2>React To Do List</h2>\r\n                <li><NavLink to='/home'>Home</NavLink></li>\r\n                <li><NavLink to='/about'>About</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport './About.css';\r\n\r\nconst AboutPage = () => {\r\n    return(\r\n        <div class=\"about-section\">\r\n            <h1>This application is designed to take notes.</h1>\r\n            <span>date of creation </span> <strong>21.04.2020</strong>\r\n            <p>Version: 1.0.0.1</p>\r\n            <address>Armenia Yerevan</address>\r\n            <p>Email: matevossyan77@gmail.com</p>\r\n            <p>tel. +374 95572075</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutPage;","import React, { useState } from 'react';\r\nimport './common.css';\r\n\r\nconst Form = (props) => {\r\n    let [value, setValue] = useState('');\r\n    const addNote = (e) => {\r\n        e.preventDefault()\r\n        if(value.trim()){\r\n            props.addNewNote(value);\r\n            setValue(''); \r\n        }else{\r\n            props.onWarning()\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <form onSubmit={addNote}>\r\n                <input onChange={(e)=> setValue(e.currentTarget.value)} \r\n                value={value}className=\"noteInput\" type=\"text\" placeholder='Title...'/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport './Notes.css';\r\nimport {CSSTransition} from 'react-transition-group';\r\n\r\nconst Note = (props) => {\r\n    return(\r\n        <div className={'note'}>\r\n            <li className={props.note.complated && 'complated'}>\r\n                <div>\r\n                    <input checked={props.note.complated}  onChange={()=> props.onToggle(props.note.id)} type=\"checkbox\"/>\r\n                    <strong>{props.index + 1})&nbsp;{props.note.title}</strong>\r\n                    <small>{new Date().toLocaleDateString()}</small>\r\n                </div>\r\n                <button onClick={()=> props.onNoteRemove(props.note.id)} className=\"button button3\">&times;</button>\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note;","import React from 'react';\r\nimport './Notes.css';\r\nimport Note from './Note';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n\r\nconst Notes = (props) => {\r\n\r\n    let NotsElement = props.notes.map((note, index) =>\r\n        <CSSTransition\r\n            key={note.id}\r\n            classNames={'note'}\r\n            timeout={500}>\r\n            <Note index={index} key={note.id} note={note} onNoteRemove={props.onNoteRemove} onToggle={props.onToggle} />\r\n        </CSSTransition>)\r\n    return (\r\n        <div>\r\n            <TransitionGroup component='ul'>\r\n                {NotsElement}\r\n            </TransitionGroup>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notes;","import React from 'react';\r\nimport {CSSTransition} from 'react-transition-group';\r\nimport './common.css';\r\n\r\n\r\nconst Alert = (props) => {\r\n    return (\r\n        <CSSTransition \r\n            in = {props.alert.boolean}\r\n            timeout = {{\r\n                enter: 500,\r\n                exit: 350\r\n            }}\r\n            classNames = {\"alert\"}\r\n            mountOnEnter\r\n            unmountOnExit\r\n        >\r\n            <div className={\"alert\"}>\r\n                <div className={props.alert.className}>\r\n                    <span className=\"closebtn\" onClick={()=>props.onHideAlert(false)}>&times;</span>\r\n                    <strong>{props.alert.title}:</strong> {props.alert.message}\r\n                </div>     \r\n            </div>\r\n        </CSSTransition>\r\n    )\r\n}\r\n\r\nexport default Alert;","import React from 'react';\r\nimport Form from '../common/Form';\r\nimport Notes from './Notes/Notes';\r\nimport Alert from '../common/Alert';\r\n\r\nconst HomePage = (props) => {\r\n    return(\r\n        <div className='home-page'>\r\n            <Alert alert={props.alert} onHideAlert={props.onHideAlert}/>\r\n            <Form addNewNote={props.addNewNote} onWarning={props.onWarning}/>\r\n            <Notes notes={props.notes} onNoteRemove={props.onNoteRemove} onToggle={props.onToggle}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","const ADD_NEW_NOTE = 'ADD_NEW_NOTE';\r\nconst ON_HIDE_ALERT = 'ON_HIDE_ALERT';\r\nconst ON_REMOVE = 'ON_REMOVE';\r\nconst ON_TOGGLE = 'ON_TOGGLE';\r\nconst ON_WARNING = 'ON_WARNING';\r\n\r\nlet initialState = {\r\n    notes:[\r\n        {id: 0, title: 'Stay at home', complated: false},\r\n        {id: 1, title: 'Learn React.js', complated: false},\r\n    ],\r\n    alert: {\r\n        boolean: false,\r\n        message: null,\r\n        className: null,\r\n        title: null,\r\n    }\r\n}\r\n\r\nconst homePageReducer = (state=initialState, action) => {\r\n    switch(action.type){\r\n        case ADD_NEW_NOTE:\r\n            let newNote = {\r\n                id: Date.now(), \r\n                title: action.newNote, \r\n                complated: false\r\n            }\r\n            return {\r\n                ...state,\r\n                notes: [...state.notes, newNote],\r\n                alert: {\r\n                    ...state.alert, \r\n                    boolean: true, \r\n                    message: action.newNote,\r\n                    className: 'newNoteAlert',\r\n                    title: 'You added a new note'}\r\n            }\r\n        case ON_REMOVE:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.filter(note => note.id !== action.noteId),\r\n                alert:{\r\n                    ...state.alert,\r\n                    boolean: true,\r\n                    message: null,\r\n                    className: 'removeNoteAlert',\r\n                    title: 'You deleted a note'\r\n                }\r\n            }\r\n        case ON_WARNING:\r\n            return {\r\n                ...state,\r\n                alert:{\r\n                    ...state.alert,\r\n                    boolean: true,\r\n                    message: 'Enter note',\r\n                    className: 'warning',\r\n                    title: 'Warning'\r\n                }\r\n            }\r\n        case ON_HIDE_ALERT:\r\n            return {\r\n                ...state,\r\n                alert: {...state.alert,  boolean: action.boolean}\r\n            }\r\n        case ON_TOGGLE:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(note => {\r\n                    if(note.id === action.noteId){\r\n                        return{...note, complated: !note.complated}\r\n                    }\r\n                    return note\r\n                })\r\n            }\r\n            default:\r\n                return state\r\n    }\r\n}\r\nexport default homePageReducer;\r\n\r\nexport const addNewNote = (newNote) => ({type:ADD_NEW_NOTE, newNote});\r\nexport const onNoteRemove = (noteId) => ({type:ON_REMOVE,noteId});\r\nexport const onWarning = () => ({type:ON_WARNING});\r\nexport const onHideAlert = (boolean) => ({type:ON_HIDE_ALERT, boolean});\r\nexport const onToggle = (noteId) => ({type:ON_TOGGLE, noteId});\r\n","import React from 'react';\r\nimport HomePage from './HomePage';\r\nimport {connect} from 'react-redux';\r\nimport {onHideAlert,addNewNote,onNoteRemove,onWarning,onToggle} from '../../redux/homePageReducer';\r\n\r\nclass HomePageContainer extends React.Component {\r\n\r\n    onNoteRemove = (userId) => {\r\n        this.props.onNoteRemove(userId);\r\n    }\r\n    addNewNote = (value) => {\r\n        this.props.addNewNote(value);\r\n    }\r\n    onWarning = (value) => {\r\n        this.props.addNewNote(value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <HomePage notes={this.props.notes}\r\n                            alert={this.props.alert}\r\n                            onHideAlert={this.props.onHideAlert}\r\n                            addNewNote={this.addNewNote}\r\n                            onNoteRemove={this.onNoteRemove}\r\n                            onWarning={this.props.onWarning}\r\n                            onToggle={this.props.onToggle}\r\n\r\n                 />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapSTP = (state) => ({\r\n    notes: state.homePage.notes,\r\n    alert: state.homePage.alert\r\n})\r\n\r\nexport default connect(mapSTP,{onHideAlert,addNewNote,onNoteRemove, onWarning,onToggle})(HomePageContainer);","import React from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport './index.css';\nimport Navbar from './componnets/Navbar/Navbar';\nimport AboutPage from './componnets/AboutPage/AboutPage';\nimport HomePageContainer from './componnets/HomePage/HomePageContainer';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <Navbar/>\n      <div className='content'>\n        <Route path='/home' render={()=> <HomePageContainer/>}/>\n        <Route path='/about' render={()=> <AboutPage/>}/>\n      </div>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createStore, combineReducers} from 'redux';\r\nimport homePageReducer from './homePageReducer';\r\n\r\n\r\nlet reducers = combineReducers({\r\n    homePage: homePageReducer\r\n})\r\n\r\nexport const store = createStore(reducers)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}